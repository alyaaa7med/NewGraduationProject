# -*- coding: utf-8 -*-
"""predict.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1vIS4LnqEgPLhE550IbJoA5qS9LFs8bSA
"""
import numpy as np
import cv2 as cv
import tensorflow as tf

def load_and_preprocess_image(file_path):
    img = cv.imread(file_path,cv.IMREAD_COLOR)
    img = cv.resize(img, (224,224))
    img = np.array(img).reshape(-1,224,224,3)
    return img

def predict_with_model(model, image):
    # Prediction step here
    prediction = model.predict(image)
    predicted_class = 1 if prediction[0][1] > prediction[0][0] else 0
    confidence = prediction[0][1] if predicted_class == 1 else prediction[0][0]
    confidence_percentage = confidence * 100

    return predicted_class, confidence_percentage


def show_result(predicted_class, confidence_percentage):
    result = ['cataract', 'no cataract']
    # print('The result is',result[predicted_class], f"Confidence level: {confidence_percentage:.2f}%")
    confidence_percentage = round(confidence_percentage, 2)
    return result[predicted_class], confidence_percentage


def image_prediction_pipeline(input_path):
    # Step 1: Load and preprocess the image
    image = load_and_preprocess_image(input_path)

    # Step 2: Load your trained TensorFlow model
    
    model = tf.keras.models.load_model("cataract/dl_model/cataract_model.h5")
                
    # Step 3: Predict using your model
    predicted_class, confidence_percentage = predict_with_model(model, image)
    return show_result(predicted_class, confidence_percentage)




# input_image_path = 'path/to/your/input/image.jpg'
# image_prediction_pipeline(input_image_path)

